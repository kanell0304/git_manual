git init - 현재 디렉토리를 Git 저장소로 초기화
git status - 현재 작업 디렉토리와 스테이징 영역의 상태 확인
git add . - 현재 디렉토리의 모든 변경사항을 스테이징 영역에 추가
git add "file name" - 특정 파일을 스테이징 영역에 추가
git commit -m "msg" - 스테이징된 변경사항을 메시지와 함께 커밋
git commit -am "msg" - 추적 중인 모든 파일의 변경사항을 자동으로 스테이징하고 커밋
git log - 커밋 히스토리를 자세히 표시
git log --oneline - 커밋 히스토리를 한 줄씩 간략하게 표시
git log --oneline --branches (모든 브랜치의 커밋을 한 줄씩 표시)
git log --oneline --branches --graph (모든 브랜치의 커밋을 그래프 형태)
git branch - 현재 브랜치 목록 표시
git branch branchName - 새로운 브랜치 생성
git switch branchName - 지정한 브랜치로 전환
git switch -c branchName - 새 브랜치를 생성하고 동시에 전환
git branch -d branchName - 브랜치 삭제 (머지된 브랜치만)
echo "str" > fileName - 문자열을 파일에 쓰기 (덮어쓰기)
git remote add origin git_url - 로컬 Git 저장소에 'origin'이라는 이름으로 원격 저장소 URL을 연결하는 명령어
git remote -v - 등록된 원격 저장소 목록을 URL과 함께 표시 (verbose)
git branch -M main - 현재 브랜치의 이름을 'main'으로 변경 (강제로 이름 변경)
git push -u origin main - 로컬의 'main' 브랜치를 원격 저장소 'origin'에 푸시하고, 업스트림 브랜치로 설정
git push origin main - 로컬의 'main' 브랜치를 원격 저장소 'origin'의 'main' 브랜치로 푸시
git push - 현재 브랜치의 변경사항을 설정된 업스트림 원격 저장소로 푸시, 업스트림이 설정되어 있어야 사용 가능
git pull -u origin main - 원격 저장소 'origin'의 'main' 브랜치를 풀하고 업스트림으로 설정
git pull origin main - 단순히 풀을 하는 경우
git pull - 업스트림이 설정된 경우
ssh-keygen -t ed25519 -C "userEmail" - SSH 키 쌍(공개키/개인키)을 생성
                                     -t ed25519: ed25519 암호화 알고리즘 사용 (현재 권장되는 보안 방식)
                                     -C "userEmail": 키에 코멘트(라벨) 추가, 보통 이메일 주소 사용
cd .ssh - SSH 관련 파일들이 저장되는 .ssh 디렉토리로 이동
          보통 ~/.ssh 경로에 위치
ls -la - 현재 디렉토리의 모든 파일과 폴더를 자세히 나열
         생성된 SSH 키 파일들(id_ed25519, id_ed25519.pub) 확인 가능
eval "$(ssh-agent -s)" - SSH 에이전트를 백그라운드에서 실행
                         SSH 에이전트는 개인키를 메모리에 안전하게 보관하는 프로그램
ssh-add ~/.ssh/id_ed25519 - 생성한 개인키를 SSH 에이전트에 등록
                            이후 SSH 연결 시 자동으로 이 키를 사용
ssh-add -l - SSH 에이전트에 등록된 키 목록을 표시
             키가 제대로 등록되었는지 확인